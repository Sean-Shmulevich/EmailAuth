// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model AuthUser {
  id             String        @id @unique
  email          String        @unique
  email_verified Boolean
  admin_verified Boolean
  is_brand       Boolean
  is_admin       Boolean
  profile        Profile?
  brand_profile        BrandProfile?
  auth_session   AuthSession[]
  auth_key       AuthKey[]
  object         object[]

  @@map("auth_user")
}

model BrandProfile {
  user_id    String     @id
  name       String
  sport      String
  college    String
  year       String
  bio        String
  auth_brand AuthUser? @relation(fields: [user_id], references: [id])
}

model AuthSession {
  id             String   @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String   @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

model object {
  id        String    @id @unique(map: "id") @default("1")
  created   DateTime? @default(now())
  file_name String?
  file_size Int?
  file_type String?
  image_number Int      @default(1)  // new field
  authUser  AuthUser  @relation(fields: [userId], references: [id])
  userId    String

  @@map("object")
}

model Profile {
  user_id   String    @id
  name      String
  sport     String
  college   String
  year      String
  bio       String
  auth_user AuthUser? @relation(fields: [user_id], references: [id])

  @@map("profile")
}

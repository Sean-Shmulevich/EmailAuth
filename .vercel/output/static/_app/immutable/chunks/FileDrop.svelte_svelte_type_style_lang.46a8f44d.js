const m=["B","kB","MB","GB","TB","PB","EB","ZB","YB"],B=["B","KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"],y=["b","kbit","Mbit","Gbit","Tbit","Pbit","Ebit","Zbit","Ybit"],M=["b","kibit","Mibit","Gibit","Tibit","Pibit","Eibit","Zibit","Yibit"],u=(e,i,n)=>{let t=e;return typeof i=="string"||Array.isArray(i)?t=e.toLocaleString(i,n):(i===!0||n!==void 0)&&(t=e.toLocaleString(void 0,n)),t};function r(e,i){if(!Number.isFinite(e))throw new TypeError(`Expected a finite number, got ${typeof e}: ${e}`);i={bits:!1,binary:!1,space:!0,...i};const n=i.bits?i.binary?M:y:i.binary?B:m,t=i.space?" ":"";if(i.signed&&e===0)return` 0${t}${n[0]}`;const a=e<0,s=a?"-":i.signed?"+":"";a&&(e=-e);let l;if(i.minimumFractionDigits!==void 0&&(l={minimumFractionDigits:i.minimumFractionDigits}),i.maximumFractionDigits!==void 0&&(l={maximumFractionDigits:i.maximumFractionDigits,...l}),e<1){const F=u(e,i.locale,l);return s+F+t+n[0]}const o=Math.min(Math.floor(i.binary?Math.log(e)/Math.log(1024):Math.log10(e)/3),n.length-1);e/=(i.binary?1024:1e3)**o,l||(e=e.toPrecision(3));const f=u(Number(e),i.locale,l),x=n[o];return s+f+t+x}var c;(function(e){e[e.InvalidFileType=0]="InvalidFileType",e[e.FileSizeMaximumExceeded=1]="FileSizeMaximumExceeded",e[e.FileSizeMinimumNotMet=2]="FileSizeMinimumNotMet",e[e.FileCountExceeded=3]="FileCountExceeded"})(c||(c={}));const S={[c.InvalidFileType]:"invalid file type",[c.FileCountExceeded]:"file count exceeded",[c.FileSizeMinimumNotMet]:"min file size not met",[c.FileSizeMaximumExceeded]:"max file size exceeded"};class d extends Error{constructor(i,n,t){super(t),this.code=i,this.message=t,this.file=n,this.name=S[i]}}class T extends d{constructor(i,n,t){t||(t=`${i.name} is not an accepted file type (${i.type}`),super(c.InvalidFileType,i,t),typeof n=="string"&&(n=n.split(",")),this.allowed=n}}class E extends d{constructor(i,n,t){t=t??`$file size (${r(i.size)}) does not meet the minimum of ${r(n)}.`,super(c.FileSizeMinimumNotMet,i,t),this.minimum=n}}class z extends d{constructor(i,n,t){t=t??`file size (${r(i.size)}) exceeds maximum of ${r(n)}.`,super(c.FileSizeMaximumExceeded,i,t)}}class b extends d{constructor(i,n,t){t=t??`file count limit of ${n} exceeded`,super(c.FileCountExceeded,i,t),this.limit=n}}export{b as F,T as I,E as a,z as b};
